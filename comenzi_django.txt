telusko navin reddy
https://www.youtube.com/watch?v=ykpuyNy5oUM&list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3&index=89


GIT

https://www.youtube.com/watch?v=iVpuVkVeBcw   --> video de la marius ciurea

git init -->initializare git local	

git status  --> verificam daca avem ceva modificari
git add nume.fisier --> adauga in staging un fisier
git commit -m  	"initial commit" --> se face un commit
git log --> se verifica comiturile
git add . --> adauga in staging toate fisierele din proiect
git restore nume.fisier --> restaureaza un fisier sters
*** putem crea un fisier ".gitignore" in care sa adaugam numele fisierelor sau a folderelor pe care nu dorim sa le urmareasca git-ul
git branc --> verificam cate branchuri avem create
git branch dev --> creem un branch nou (in cazul asta branchul se numeste dev)
git branch -d dev --> stergem branch-ul cu numele dev

github.com --> repository remote
newrepository --> creem un repository nou remote pe github
git clone https://github.com/danimoncerro/telusko --> clonam local un proiect de pe github


git remote add origin https://github.com/danimoncerro/telusko.git --> creem un repository pe github


git remote -v --> vedem ce remote repository avem
git push -u origin master --> sincronizam repository local cu cel de pe github
git push --> adauga toate modificarile din remote-ul local in cel remote
git fetch --> verificam daca exista modificari pe repository remote fata de cel local
git pull --> face update la repository local cu cel remote



Setup

python -m venv django_env
mkvirtualenv test
pip install django
django-admin startproject telusko
python manage.py runserver
workon test
python manage.py startapp calc

python manage.py makemigrations
python manage.py migrate
python manage.py shell --> se deschide un shell unde putem interoga baza de date

DTL = Django Template Language

pip freeze > requirements.txt --> creare fisier requirements

python manage.py createsuperuser

pip install django-filter

pip install pillow --> pentru poze



Bek Brace


https://www.youtube.com/watch?v=9aEsZxaOwRs&list=PL-51WBLyFTg2vW-_6XBoUpE7vpmoR3ztO&index=3


*********************************************************************



py manage.py startapp store  # creare aplicatie noua

HEROKU

heroku login
heroku create sistemhortigrup

heroku git:remote -a hortigruptest1   // conectarea la un anumit folder
	
git remote -v
git init
git status
git add .
git commit -m "Primul commit"
git push heroku master
	

push dupa modificare

git status
git add .
git commit -m "Updated commit"
git push heroku master



Pythonanywhere



alias python=python3  //comutare intre python2 si python3

mkvirtualenv django3 --python=/usr/bin/python3.8  // creare mediu virtual nou

workon django3 // pornire environment


mysql

mysql -u moncerro -h moncerro.mysql.pythonanywhere-services.com -p    //conectarea la mysql